#!/usr/bin/env python3
import urllib.request
import urllib.error
import json
import time
import sys

BASE_URL = "http://localhost:8080"

def make_request(method, endpoint, data=None):
    """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π HTTP –∫–ª–∏–µ–Ω—Ç"""
    url = f"{BASE_URL}{endpoint}"
    
    if data:
        data = json.dumps(data).encode('utf-8')
    
    req = urllib.request.Request(
        url,
        data=data,
        method=method,
        headers={'Content-Type': 'application/json'}
    )
    
    try:
        with urllib.request.urlopen(req) as response:
            return response.getcode(), response.read().decode('utf-8')
    except urllib.error.HTTPError as e:
        return e.code, e.read().decode('utf-8')
    except Exception as e:
        return None, str(e)

def create_slow_download_task():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏"""
    print("üîÑ –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∞ –¥–æ–∫–∞—á–∫–∏...")
    
    # –ù–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ —Ä–∞–∑–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å –æ–±—â–µ–µ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
    files = [
        "https://m.kinosimka.plus/engine/go.php?url=aHR0cHM6Ly9lMDEudmFzcWEubmV0L2gwMy9jL2EvR3J5YXpuYXlhX2lncmFfMjAyNV82NDAubXA0",

    ]
    
    print("üì¶ –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:")
    for i, url in enumerate(files, 1):
        print(f"   {i}. {url}")
    
    status, body = make_request("POST", "/tasks", {"urls": files})
    
    if status != 201:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: {status}")
        return None
    
    task_data = json.loads(body)
    task_id = task_data["id"]
    print(f"‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: {task_id}")
    return task_id

def monitor_progress_with_interrupt(task_id):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–µ—Ä–≤–∞—Ç—å –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç"""
    print("\nüéØ –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏...")
    print("   –ü—Ä–µ—Ä–≤–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–≥–¥–∞ —É–≤–∏–¥–∏—Ç–µ —á—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –Ω–∞—á–∞–ª–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è!")
    
    files_in_progress = 0
    last_progress = {}
    
    for i in range(15):  # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º 15 —Å–µ–∫—É–Ω–¥
        status, body = make_request("GET", f"/tasks/{task_id}")
        
        if status == 200:
            data = json.loads(body)
            current_status = data["status"]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª—É
            if data.get("results"):
                print(f"\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å [{i+1}/15]:")
                
                current_files = 0
                for j, result in enumerate(data["results"]):
                    bytes_read = result.get("bytes_read", 0)
                    url_short = result["url"][:50] + "..." if len(result["url"]) > 50 else result["url"]
                    
                    if bytes_read > 0:
                        current_files += 1
                        status_icon = "‚úÖ" if result.get('success') else "üîÑ"
                        print(f"   {status_icon} –§–∞–π–ª {j+1}: {bytes_read} –±–∞–π—Ç - {url_short}")
                    
                    # –°–ª–µ–¥–∏–º –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –ø—Ä–µ—Ä–≤–∞—Ç—å
                    if bytes_read > 0 and bytes_read < 102400:  # –ï—Å–ª–∏ —Ñ–∞–π–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏
                        current_files += 1
                
                files_in_progress = current_files
                
                # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–µ—Ä–≤–∞—Ç—å
                if files_in_progress >= 2:
                    print(f"\nüéØ –ò–î–ï–ê–õ–¨–ù–´–ô –ú–û–ú–ï–ù–¢ –î–õ–Ø –ü–†–ï–†–´–í–ê–ù–ò–Ø!")
                    print(f"   {files_in_progress} —Ñ–∞–π–ª–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏")
                    print("   –ë—ã—Å—Ç—Ä–æ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞!")
                    print("   –£ –≤–∞—Å –µ—Å—Ç—å 3 —Å–µ–∫—É–Ω–¥—ã...")
                    
                    for countdown in range(3, 0, -1):
                        print(f"   {countdown}...")
                        time.sleep(1)
                    
                    print("\nüõë –°–ï–†–í–ï–† –î–û–õ–ñ–ï–ù –ë–´–¢–¨ –ü–†–ï–†–í–ê–ù!")
                    print("   –ï—Å–ª–∏ —É—Å–ø–µ–ª–∏ –ø—Ä–µ—Ä–≤–∞—Ç—å - –æ—Ç–ª–∏—á–Ω–æ!")
                    print("   –ï—Å–ª–∏ –Ω–µ—Ç - —Ç–µ—Å—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
                    break
            
            if current_status == "completed":
                print("‚ùå –í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ —Å–∫–∞—á–∞–ª–∏—Å—å! –°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ.")
                return "completed"
            elif current_status == "failed":
                print("‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
                return "failed"
        
        time.sleep(1)
    
    return "interrupted"

def test_resume_after_interrupt(task_id):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è"""
    print("\nüîÑ –¢–ï–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø")
    print("=" * 50)
    
    print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: go run cmd/server/main.go")
    print("2. –ó–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ Enter –∑–¥–µ—Å—å...")
    input()
    
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏...")
    status, body = make_request("GET", f"/tasks/{task_id}")
    
    if status != 200:
        print(f"‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å: {status}")
        return False
    
    data = json.loads(body)
    print(f"‚úÖ –ó–∞–¥–∞—á–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –°—Ç–∞—Ç—É—Å: {data['status']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    if data.get("results"):
        print("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")
        total_files = len(data["results"])
        completed_files = sum(1 for r in data["results"] if r.get('success'))
        in_progress_files = sum(1 for r in data["results"] if r.get('bytes_read', 0) > 0 and not r.get('success'))
        
        print(f"   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {total_files}")
        print(f"   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {completed_files}")
        print(f"   –í –ø—Ä–æ—Ü–µ—Å—Å–µ: {in_progress_files}")
        
        for j, result in enumerate(data["results"]):
            status_icon = "‚úÖ" if result.get('success') else "üîÑ"
            bytes_info = f"{result.get('bytes_read', 0)} –±–∞–π—Ç" 
            print(f"   {status_icon} –§–∞–π–ª {j+1}: {bytes_info}")
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    print("\n4. –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–∫–∞—á–∫–∏...")
    for i in range(20):
        status, body = make_request("GET", f"/tasks/{task_id}")
        if status == 200:
            data = json.loads(body)
            current_status = data["status"]
            
            if current_status == "completed":
                print("üéâ –î–û–ö–ê–ß–ö–ê –£–°–ü–ï–®–ù–ê!")
                if data.get("results"):
                    total_bytes = sum(r.get('bytes_read', 0) for r in data["results"])
                    success_count = sum(1 for r in data["results"] if r.get('success'))
                    print(f"üì¶ –ò—Ç–æ–≥: {success_count}/{len(data['results'])} —Ñ–∞–π–ª–æ–≤, {total_bytes} –±–∞–π—Ç")
                return True
            elif current_status == "failed":
                print("‚ùå –î–æ–∫–∞—á–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
                return False
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
            if i % 5 == 0:  # –ö–∞–∂–¥—ã–µ 5 –∏—Ç–µ—Ä–∞—Ü–∏–π
                if data.get("results"):
                    completed = sum(1 for r in data["results"] if r.get('success'))
                    print(f"   [{i+1}/20] –°—Ç–∞—Ç—É—Å: {current_status}, –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {completed}/{len(data['results'])}")
        
        time.sleep(1)
    
    print("‚ö†Ô∏è –î–æ–∫–∞—á–∫–∞ –∑–∞–Ω—è–ª–∞ –±–æ–ª—å—à–µ 20 —Å–µ–∫—É–Ω–¥")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –¥–æ–∫–∞—á–∫–∏"""
    print("üöÄ –£–°–õ–û–ñ–ù–ï–ù–ù–´–ô –¢–ï–°–¢ –î–û–ö–ê–ß–ö–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å...")
    status, body = make_request("GET", "/tasks/nonexistent")
    if status not in [200, 404]:
        print("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
        sys.exit(1)
    print("‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏
    task_id = create_slow_download_task()
    if not task_id:
        sys.exit(1)
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∏ –ø—Ä–µ—Ä—ã–≤–∞–µ–º
    result = monitor_progress_with_interrupt(task_id)
    
    if result == "completed":
        print("\nüí° –í—Å–µ —Å–∫–∞—á–∞–ª–æ—Å—å —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("   - –ë–æ–ª–µ–µ –º–µ–¥–ª–µ–Ω–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("   - –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã")
        print("   - –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –∑–∞–¥–∞—á–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ downloads/tasks/")
        return
    
    elif result == "failed":
        print("\n‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    success = test_resume_after_interrupt(task_id)
    
    if success:
        print("\nüéâ –¢–ï–°–¢ –î–û–ö–ê–ß–ö–ò –ü–†–û–ô–î–ï–ù!")
        print("‚úÖ –°–µ—Ä–≤–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏")
        print("‚úÖ –ó–∞–¥–∞—á–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –¥–∏—Å–∫")
        print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞")
    else:
        print("\n‚ö†Ô∏è –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")

if __name__ == "__main__":
    main()